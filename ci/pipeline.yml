---
groups:
  - name: bosh-azure-cpi-release
    jobs:
      - build-candidate
      - azure-ubuntu
      - deploy-director
      - bats-ubuntu
      - promote-candidate
jobs:
- name: build-candidate
  serial: true
  plan:
  - aggregate:
    - {trigger: false, get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false, get: version-semver, params: {bump: patch}}

  - put: version-semver
    params: {file: version-semver/number}

  - task: build
    file: bosh-cpi-release/ci/tasks/build-candidate.yml

  - put: bosh-cpi-dev-artifacts
    params: {from: build/out/.*\.tgz}

- name: azure-ubuntu
  serial: true
  plan:
  - aggregate:
    - {trigger: false, get: bosh-cpi-release, resource: bosh-cpi-release-in}

  - task: azure-provision
    file: bosh-cpi-release/ci/tasks/azure-provision.yml
    config:
      params:
        AZURE_CLIENT_ID:          {{azure_client_id}}
        AZURE_CLIENT_SECRET:      {{azure_client_secret}}
        AZURE_TENANT_ID: {{azure_tenant_id}}
        AZURE_GROUP_NAME: {{azure_group_name}}
        AZURE_REGION_NAME: {{azure_region_name}}
        AZURE_VNET_NAME: {{azure_vnet_name}}
        AZURE_REGION_SHORT_NAME: {{azure_region_short_name}}
        AZURE_STORAGE_ACCOUNT_NAME: {{azure_storage_account_name}}
        AZURE_SUBSCRIPTION_ID: {{azure_subscription_id}}
        AZURE_TENANT_ID: {{azure_tenant_id}}
        AZURE_BOSH_SUBNET_NAME: {{azure_bosh_subnet_name}}
        AZURE_CF_SUBNET_NAME: {{azure_cf_subnet_name}}
        base_os:                    ubuntu
    ensure:
      do:
      - put: azure-exports
        params: {from: azure-provision/azure-exports.sh$}

- name: deploy-director
  serial: true # find out serial vs. serial_groups and which previous job should trigger this job
  plan:
  - aggregate:
    - {trigger: false,  passed: [build-candidate],  get: bosh-cpi-dev-artifacts, resource: bosh-cpi-dev-artifacts}
    - {trigger: false, passed: [build-candidate],  get: version-semver, resource: version-semver}
    - {trigger: true,  passed: [azure-ubuntu],     get: azure-exports, resource: azure-exports}
    - {trigger: false,  get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false,                             get: director-state-file, resource: ubuntu-director-state-file}
    - {trigger: false,                             get: bosh-init}
    - {trigger: false,                             get: bosh-release}

  - task: deploy
    file: bosh-cpi-release/ci/tasks/deploy.yml
    config:
      params:
        base_os:                    ubuntu
        AZURE_CLIENT_ID:            {{azure_client_id}}
        AZURE_CLIENT_SECRET:        {{azure_client_secret}}
        AZURE_TENANT_ID:            {{azure_tenant_id}}
        AZURE_GROUP_NAME:           {{azure_group_name}}
        AZURE_VNET_NAME:            {{azure_vnet_name}}
        AZURE_STORAGE_ACCOUNT_NAME: {{azure_storage_account_name}}
        AZURE_SUBSCRIPTION_ID:      {{azure_subscription_id}}
        AZURE_BOSH_SUBNET_NAME:     {{azure_bosh_subnet_name}}
        BAT_NETWORK_GATEWAY:        {{BAT_NETWORK_GATEWAY}}
        STEMCELL_URL:               {{BAT_STEMCELL_URL_UBUNTU}}
        STEMCELL_SHA:               {{BAT_STEMCELL_SHA_UBUNTU}}
        private_key_data:           {{bosh_private_key}}
        ssh_certificate:            {{bosh_public_cert}}
    ensure:
      do:
      - put: ubuntu-director-state-file
        params: {from: deploy/director-state-file/ubuntu-director-manifest-state.json}

- name: promote-candidate
  serial: true
  plan:
  - aggregate:
    # TODO: After the bosh-init and bats tasks are implemented, we should
    # be able to add
    - {trigger: true, passed: [build-candidate], passed: [bats-ubuntu], get: bosh-cpi-dev-artifacts}
    - {trigger: false, get: bosh-cpi-release, resource: bosh-cpi-release-in}

  - task: promote
    file: bosh-cpi-release/ci/tasks/promote-candidate.yml
    config:
      params:
        aws_access_key_id: {{s3_azure_cpi_access_key}}
        aws_secret_access_key: {{s3_azure_cpi_secret_key}}

  - put: bosh-cpi-release
    resource: bosh-cpi-release-out
    params: {repository: promote/bosh-cpi-release, rebase: true}

- name: bats-ubuntu
  plan:
  #  
  # passed: 
  - aggregate:
    - {trigger: true, passed: [build-candidate], passed: [deploy-director], get: bosh-cpi-dev-artifacts}
    - {trigger: false, get: bosh-cpi-release, resource: bosh-cpi-release-in}
    - {trigger: false, passed: [azure-ubuntu], get: azure-exports, resource: azure-exports}
    - {trigger: false, get: bosh}
    - {trigger: false, get: stemcell, resource: azure-ubuntu-stemcell}

  - task: test
    file: bosh-cpi-release/ci/tasks/run-bats.yml
    config:
      params:
        base_os:                    ubuntu
        BAT_VCAP_PASSWORD:          {{BAT_VCAP_PASSWORD}}
        private_key_data:           {{bosh_private_key}}
        AZURE_VNET_NAME:            {{azure_vnet_name}}
        BAT_STEMCELL_URL:           {{BAT_STEMCELL_URL_UBUNTU}}
        BAT_STEMCELL_SHA:           {{BAT_STEMCELL_SHA_UBUNTU}}
        BAT_SECOND_STATIC_IP:       {{BAT_SECOND_STATIC_IP}}
        BAT_NETWORK_STATIC_IP:      {{BAT_NETWORK_STATIC_IP}}
        BAT_NETWORK_CIDR:           {{BAT_NETWORK_CIDR}}
        BAT_NETWORK_RESERVED_RANGE: {{BAT_NETWORK_RESERVED_RANGE}}
        BAT_NETWORK_GATEWAY:        {{BAT_NETWORK_GATEWAY}}
        BAT_NETWORK_STATIC_RANGE:   {{BAT_NETWORK_STATIC_RANGE}}
        AZURE_CF_SUBNET_NAME: {{azure_cf_subnet_name}}

resources:
- name: bosh-cpi-release-in
  type: git
  source:
    uri: {{azure_cpi_bosh_release_repo}}
    branch: {{azure_cpi_bosh_release_branch}}
    private_key: {{github_deployment_key__bosh-azure-cpi-release}}
    ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml

- name: bosh-cpi-release-out
  type: git
  source:
    uri: {{azure_cpi_bosh_release_repo}}
    branch: {{github_deployment_branch}}
    private_key: {{github_deployment_key__bosh-azure-cpi-release}}

- name: version-semver
  type: semver
  source:
    key:               current-version # dev-release version
    initial_version:   0.0.1
    bucket:            {{s3_azure_cpi_pipeline_bucket}}
    access_key_id:     {{s3_azure_cpi_access_key}}
    secret_access_key: {{s3_azure_cpi_secret_key}}

- name: bosh-cpi-dev-artifacts
  type: s3
  source:
    regexp: bosh-azure-cpi\.tgz
    bucket: {{s3_azure_cpi_pipeline_bucket}}
    region_name: {{s3_azure_cpi_region}}
    access_key_id: {{s3_azure_cpi_access_key}}
    secret_access_key: {{s3_azure_cpi_secret_key}}

- name: bosh-init
  type: s3
  source:
    versioned_file: bosh-init-linux-amd64
    bucket: {{s3_bosh_init_bucket}}
    region_name: {{s3_azure_state_file_region}}
    access_key_id: {{s3_azure_state_file_access_key}}
    secret_access_key: {{s3_azure_state_file_secret_key}}

- name: ubuntu-director-state-file
  type: s3
  source:
    bucket:            {{s3_azure_cpi_ubuntu_director_state_file_bucket}}
    versioned_file:    ubuntu-director-manifest-state.json
    region_name:       {{s3_azure_cpi_ubuntu_director_state_file_region}}
    access_key_id:     {{s3_azure_cpi_ubuntu_director_state_file_access_key}}
    secret_access_key: {{s3_azure_cpi_ubuntu_director_state_file_secret_key}}

- name: azure-exports
  type: s3
  source:
    versioned_file: azure-exports.sh
    bucket: {{s3_azure_state_file_bucket}}
    region_name: {{s3_azure_state_file_region}}
    access_key_id: {{s3_azure_state_file_access_key}}
    secret_access_key: {{s3_azure_state_file_secret_key}}

- name: bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh


# TODO used bats repo directly
- name: bosh
  type: git
  source:
    uri:  https://github.com/AbelHu/bosh
    branch: abelhu

- name: azure-ubuntu-stemcell
  type: s3
  source:
    bucket: {{s3_temp_stemcell_bucket}}
    versioned_file: stemcell.tgz
    region_name: {{s3_azure_cpi_region}}
    access_key_id: {{s3_azure_cpi_access_key}}
    secret_access_key: {{s3_azure_cpi_secret_key}}
